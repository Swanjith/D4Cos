JINX_MAJOR_VER=0.5
JINX_ARCH=x86_64

export CFLAGS="-O2 -pipe -march=x86-64 -mtune=generic"
export CXXFLAGS="${CFLAGS}"

OS_TRIPLET=x86_64-polaris

post_package_strip() {
    if [ -z "$strip_command" ]; then
        strip_command="${OS_TRIPLET}-strip"
    fi

    for f in $(find "${dest_dir}"); do
        if file "$f" | grep 'not stripped' >/dev/null; then
            echo "* stripping '$f'..."
            stripped_file="$(mktemp)"
            ${strip_command} "$f" -o "$stripped_file"
            chmod --reference="$f" "$stripped_file"
            mv -f "$stripped_file" "$f"
        fi
    done
}

autotools_configure() {
    if [ -z "${configure_script_path}" ]; then
        configure_script_path="${source_dir}/configure"
    fi

        ac_cv_func_malloc_0_nonnull=yes \
        ac_cv_func_calloc_0_nonnull=yes \
        ac_cv_func_realloc_0_nonnull=yes \
    ${configure_script_path} \
        --host=${OS_TRIPLET} \
        --with-sysroot=${sysroot_dir} \
        --prefix=${prefix} \
        --sysconfdir=/etc \
        --localstatedir=/var \
        --bindir=${prefix}/bin \
        --sbindir=${prefix}/bin \
        --libdir=${prefix}/lib \
        --disable-static \
        --enable-shared \
        --disable-malloc0returnsnull \
        "$@"
}

autotools_recursive_regen() {
    ACLOCAL_INCLUDE=""
    if [ -d ${sysroot_dir}/usr/share/aclocal ]; then
        ACLOCAL_INCLUDE="-I${sysroot_dir}/usr/share/aclocal"
    fi

    for f in $(find . -name configure.ac -o -name configure.in -type f); do
        echo "* autotools regen in '$(dirname $f)'..."
        ( cd "$(dirname "$f")" && autoreconf -fvi "$@" $ACLOCAL_INCLUDE )
    done
}

meson_configure() {
    if [ -z "${meson_source_dir}" ]; then
        meson_source_dir="${source_dir}"
    fi

    meson setup "${meson_source_dir}" \
        --cross-file "${base_dir}/build-support/cross_file.txt" \
        --prefix=${prefix} \
        --sysconfdir=/etc \
        --localstatedir=/var \
        --libdir=lib \
        --sbindir=bin \
        --buildtype=release \
        -Ddefault_library=shared \
        "$@"
}

cmake_configure() {
        CFLAGS="$TARGET_CFLAGS" \
        CXXFLAGS="$TARGET_CXXFLAGS" \
        LDFLAGS="$TARGET_LDFLAGS" \
    cmake_configure_noflags \
        "$@"
}

cmake_configure_noflags() {
    if [ -z "${cmake_source_dir}" ]; then
        cmake_source_dir="${source_dir}"
    fi

    cmake "${cmake_source_dir}" \
        -DCMAKE_TOOLCHAIN_FILE="${base_dir}/build-support/CMakeToolchain.txt" \
        -DCMAKE_INSTALL_PREFIX=${prefix} \
        -DCMAKE_INSTALL_SYSCONFDIR=/etc \
        -DCMAKE_INSTALL_LOCALSTATEDIR=/var \
        -DCMAKE_INSTALL_LIBDIR=lib \
        -DCMAKE_INSTALL_SBINDIR=bin \
        -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_SHARED_LIBS=True \
        -DENABLE_STATIC=False \
        -DPKG_CONFIG_EXECUTABLE="/usr/local/bin/$OS_TRIPLET-pkg-config" \
        -GNinja \
        "$@"
}
